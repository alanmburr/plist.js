{
  "version": 3,
  "sources": ["../node_modules/@xmldom/xmldom/lib/conventions.js", "../node_modules/@xmldom/xmldom/lib/dom.js", "../node_modules/@xmldom/xmldom/lib/entities.js", "../node_modules/@xmldom/xmldom/lib/sax.js", "../node_modules/@xmldom/xmldom/lib/dom-parser.js", "../node_modules/@xmldom/xmldom/lib/index.js", "../node_modules/base64-js/index.js", "../node_modules/xmlbuilder/lib/Utility.js", "../node_modules/xmlbuilder/lib/XMLDOMImplementation.js", "../node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js", "../node_modules/xmlbuilder/lib/XMLDOMStringList.js", "../node_modules/xmlbuilder/lib/XMLDOMConfiguration.js", "../node_modules/xmlbuilder/lib/NodeType.js", "../node_modules/xmlbuilder/lib/XMLAttribute.js", "../node_modules/xmlbuilder/lib/XMLNamedNodeMap.js", "../node_modules/xmlbuilder/lib/XMLElement.js", "../node_modules/xmlbuilder/lib/XMLCharacterData.js", "../node_modules/xmlbuilder/lib/XMLCData.js", "../node_modules/xmlbuilder/lib/XMLComment.js", "../node_modules/xmlbuilder/lib/XMLDeclaration.js", "../node_modules/xmlbuilder/lib/XMLDTDAttList.js", "../node_modules/xmlbuilder/lib/XMLDTDEntity.js", "../node_modules/xmlbuilder/lib/XMLDTDElement.js", "../node_modules/xmlbuilder/lib/XMLDTDNotation.js", "../node_modules/xmlbuilder/lib/XMLDocType.js", "../node_modules/xmlbuilder/lib/XMLRaw.js", "../node_modules/xmlbuilder/lib/XMLText.js", "../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js", "../node_modules/xmlbuilder/lib/XMLDummy.js", "../node_modules/xmlbuilder/lib/XMLNodeList.js", "../node_modules/xmlbuilder/lib/DocumentPosition.js", "../node_modules/xmlbuilder/lib/XMLNode.js", "../node_modules/xmlbuilder/lib/XMLStringifier.js", "../node_modules/xmlbuilder/lib/WriterState.js", "../node_modules/xmlbuilder/lib/XMLWriterBase.js", "../node_modules/xmlbuilder/lib/XMLStringWriter.js", "../node_modules/xmlbuilder/lib/XMLDocument.js", "../node_modules/xmlbuilder/lib/XMLDocumentCB.js", "../node_modules/xmlbuilder/lib/XMLStreamWriter.js", "../node_modules/xmlbuilder/lib/index.js", "../lib/parse.js", "../lib/build.js"],
  "sourcesContent": ["'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n", "var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE\uFF1A\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n", "'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n", "var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: \u8FD9\u91CC\u6709\u53EF\u80FDsax\u56DE\u9000\uFF0C\u6709\u4F4D\u7F6E\u9519\u8BEF\u98CE\u9669\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//\u5FD8\u8BB0\u95ED\u5408\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n", "var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n", "var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  // Copies all enumerable own properties from `sources` to `target`\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function(target, ...sources) {\n    var i, key, len, source;\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  // Determines if `val` is a Function object\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  // Determines if `val` is an Object\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  // Determines if `val` is an Array\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  // Determines if `val` is an empty Array or an Object with no own properties\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  // Determines if `val` is a plain Object\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  // Gets the primitive value of an object\n  getValue = function(obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n  module.exports.getValue = getValue;\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  // Implements the DOMImplementation interface\n  var XMLDOMImplementation;\n\n  module.exports = XMLDOMImplementation = class XMLDOMImplementation {\n    // Tests if the DOM implementation implements a specific feature.\n\n    // `feature` package name of the feature to test. In Level 1, the\n    //           legal values are \"HTML\" and \"XML\" (case-insensitive).\n    // `version` version number of the package name to test. \n    //           In Level 1, this is the string \"1.0\". If the version is \n    //           not specified, supporting any version of the feature will \n    //           cause the method to return true.\n    hasFeature(feature, version) {\n      return true;\n    }\n\n    // Creates a new document type declaration.\n\n    // `qualifiedName` qualified name of the document type to be created\n    // `publicId` public identifier of the external subset\n    // `systemId` system identifier of the external subset\n    createDocumentType(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Creates a new document.\n\n    // `namespaceURI` namespace URI of the document element to create\n    // `qualifiedName` the qualified name of the document to be created\n    // `doctype` the type of document to be created or null\n    createDocument(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Creates a new HTML document.\n\n    // `title` document title\n    createHTMLDocument(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Returns a specialized object which implements the specialized APIs \n    // of the specified feature and version.\n\n    // `feature` name of the feature requested.\n    // `version` version number of the feature to test\n    getFeature(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  // Represents the error handler for DOM operations\n  var XMLDOMErrorHandler;\n\n  module.exports = XMLDOMErrorHandler = class XMLDOMErrorHandler {\n    // Initializes a new instance of `XMLDOMErrorHandler`\n\n    constructor() {}\n\n    // Called on the error handler when an error occurs.\n\n    // `error` the error message as a string\n    handleError(error) {\n      throw new Error(error);\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  // Represents a list of string entries\n  var XMLDOMStringList;\n\n  module.exports = XMLDOMStringList = (function() {\n    class XMLDOMStringList {\n      // Initializes a new instance of `XMLDOMStringList`\n      // This is just a wrapper around an ordinary\n      // JS array.\n\n      // `arr` the array of string values\n      constructor(arr) {\n        this.arr = arr || [];\n      }\n\n      // Returns the indexth item in the collection.\n\n      // `index` index into the collection\n      item(index) {\n        return this.arr[index] || null;\n      }\n\n      // Test if a string is part of this DOMStringList.\n\n      // `str` the string to look for\n      contains(str) {\n        return this.arr.indexOf(str) !== -1;\n      }\n\n    };\n\n    // Returns the number of strings in the list.\n    Object.defineProperty(XMLDOMStringList.prototype, 'length', {\n      get: function() {\n        return this.arr.length;\n      }\n    });\n\n    return XMLDOMStringList;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n\n  XMLDOMStringList = require('./XMLDOMStringList');\n\n  // Implements the DOMConfiguration interface\n  module.exports = XMLDOMConfiguration = (function() {\n    class XMLDOMConfiguration {\n      constructor() {\n        var clonedSelf;\n        this.defaultParams = {\n          \"canonical-form\": false,\n          \"cdata-sections\": false,\n          \"comments\": false,\n          \"datatype-normalization\": false,\n          \"element-content-whitespace\": true,\n          \"entities\": true,\n          \"error-handler\": new XMLDOMErrorHandler(),\n          \"infoset\": true,\n          \"validate-if-schema\": false,\n          \"namespaces\": true,\n          \"namespace-declarations\": true,\n          \"normalize-characters\": false,\n          \"schema-location\": '',\n          \"schema-type\": '',\n          \"split-cdata-sections\": true,\n          \"validate\": false,\n          \"well-formed\": true\n        };\n        this.params = clonedSelf = Object.create(this.defaultParams);\n      }\n\n      // Gets the value of a parameter.\n\n      // `name` name of the parameter\n      getParameter(name) {\n        if (this.params.hasOwnProperty(name)) {\n          return this.params[name];\n        } else {\n          return null;\n        }\n      }\n\n      // Checks if setting a parameter to a specific value is supported.\n\n      // `name` name of the parameter\n      // `value` parameter value\n      canSetParameter(name, value) {\n        return true;\n      }\n\n      // Sets the value of a parameter.\n\n      // `name` name of the parameter\n      // `value` new value or null if the user wishes to unset the parameter\n      setParameter(name, value) {\n        if (value != null) {\n          return this.params[name] = value;\n        } else {\n          return delete this.params[name];\n        }\n      }\n\n    };\n\n    // Returns the list of parameter names\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n\n    return XMLDOMConfiguration;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  module.exports = {\n    Element: 1,\n    Attribute: 2,\n    Text: 3,\n    CData: 4,\n    EntityReference: 5,\n    EntityDeclaration: 6,\n    ProcessingInstruction: 7,\n    Comment: 8,\n    Document: 9,\n    DocType: 10,\n    DocumentFragment: 11,\n    NotationDeclaration: 12,\n    // Numeric codes up to 200 are reserved to W3C for possible future use.\n    // Following are types internal to this library:\n    Declaration: 201,\n    Raw: 202,\n    AttributeDeclaration: 203,\n    ElementDeclaration: 204,\n    Dummy: 205\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLAttribute, XMLNode;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  // Represents an attribute\n  module.exports = XMLAttribute = (function() {\n    class XMLAttribute {\n      // Initializes a new instance of `XMLAttribute`\n\n      // `parent` the parent node\n      // `name` attribute target\n      // `value` attribute value\n      constructor(parent, name, value) {\n        this.parent = parent;\n        if (this.parent) {\n          this.options = this.parent.options;\n          this.stringify = this.parent.stringify;\n        }\n        if (name == null) {\n          throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n        }\n        this.name = this.stringify.name(name);\n        this.value = this.stringify.attValue(value);\n        this.type = NodeType.Attribute;\n        // DOM level 3\n        this.isId = false;\n        this.schemaTypeInfo = null;\n      }\n\n      // Creates and returns a deep clone of `this`\n      clone() {\n        return Object.create(this);\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n      }\n\n      \n      // Returns debug string for this node\n      debugInfo(name) {\n        name = name || this.name;\n        if (name == null) {\n          return \"parent: <\" + this.parent.name + \">\";\n        } else {\n          return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n        }\n      }\n\n      isEqualNode(node) {\n        if (node.namespaceURI !== this.namespaceURI) {\n          return false;\n        }\n        if (node.prefix !== this.prefix) {\n          return false;\n        }\n        if (node.localName !== this.localName) {\n          return false;\n        }\n        if (node.value !== this.value) {\n          return false;\n        }\n        return true;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    // DOM level 4\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function() {\n        return true;\n      }\n    });\n\n    return XMLAttribute;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  // Represents a map of nodes accessed by a string key\n  var XMLNamedNodeMap;\n\n  module.exports = XMLNamedNodeMap = (function() {\n    class XMLNamedNodeMap {\n      // Initializes a new instance of `XMLNamedNodeMap`\n      // This is just a wrapper around an ordinary\n      // JS object.\n\n      // `nodes` the object containing nodes.\n      constructor(nodes) {\n        this.nodes = nodes;\n      }\n\n      // Creates and returns a deep clone of `this`\n\n      clone() {\n        // this class should not be cloned since it wraps\n        // around a given object. The calling function should check\n        // whether the wrapped object is null and supply a new object\n        // (from the clone).\n        return this.nodes = null;\n      }\n\n      // DOM Level 1\n      getNamedItem(name) {\n        return this.nodes[name];\n      }\n\n      setNamedItem(node) {\n        var oldNode;\n        oldNode = this.nodes[node.nodeName];\n        this.nodes[node.nodeName] = node;\n        return oldNode || null;\n      }\n\n      removeNamedItem(name) {\n        var oldNode;\n        oldNode = this.nodes[name];\n        delete this.nodes[name];\n        return oldNode || null;\n      }\n\n      item(index) {\n        return this.nodes[Object.keys(this.nodes)[index]] || null;\n      }\n\n      // DOM level 2 functions to be implemented later\n      getNamedItemNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\");\n      }\n\n      setNamedItemNS(node) {\n        throw new Error(\"This DOM method is not implemented.\");\n      }\n\n      removeNamedItemNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\");\n      }\n\n    };\n\n    \n    // DOM level 1\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\n      get: function() {\n        return Object.keys(this.nodes).length || 0;\n      }\n    });\n\n    return XMLNamedNodeMap;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLAttribute, XMLElement, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject,\n    hasProp = {}.hasOwnProperty;\n\n  ({isObject, isFunction, getValue} = require('./Utility'));\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  // Represents an element of the XML document\n  module.exports = XMLElement = (function() {\n    class XMLElement extends XMLNode {\n      // Initializes a new instance of `XMLElement`\n\n      // `parent` the parent node\n      // `name` element name\n      // `attributes` an object containing name/value pairs of attributes\n      constructor(parent, name, attributes) {\n        var child, j, len, ref;\n        super(parent);\n        if (name == null) {\n          throw new Error(\"Missing element name. \" + this.debugInfo());\n        }\n        this.name = this.stringify.name(name);\n        this.type = NodeType.Element;\n        this.attribs = {};\n        this.schemaTypeInfo = null;\n        if (attributes != null) {\n          this.attribute(attributes);\n        }\n        // set properties if this is the root node\n        if (parent.type === NodeType.Document) {\n          this.isRoot = true;\n          this.documentObject = parent;\n          parent.rootObject = this;\n          // set dtd name\n          if (parent.children) {\n            ref = parent.children;\n            for (j = 0, len = ref.length; j < len; j++) {\n              child = ref[j];\n              if (child.type === NodeType.DocType) {\n                child.name = this.name;\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      // Creates and returns a deep clone of `this`\n\n      clone() {\n        var att, attName, clonedSelf, ref;\n        clonedSelf = Object.create(this);\n        // remove document element\n        if (clonedSelf.isRoot) {\n          clonedSelf.documentObject = null;\n        }\n        // clone attributes\n        clonedSelf.attribs = {};\n        ref = this.attribs;\n        for (attName in ref) {\n          if (!hasProp.call(ref, attName)) continue;\n          att = ref[attName];\n          clonedSelf.attribs[attName] = att.clone();\n        }\n        // clone child nodes\n        clonedSelf.children = [];\n        this.children.forEach(function(child) {\n          var clonedChild;\n          clonedChild = child.clone();\n          clonedChild.parent = clonedSelf;\n          return clonedSelf.children.push(clonedChild);\n        });\n        return clonedSelf;\n      }\n\n      // Adds or modifies an attribute\n\n      // `name` attribute name\n      // `value` attribute value\n      attribute(name, value) {\n        var attName, attValue;\n        if (name != null) {\n          name = getValue(name);\n        }\n        if (isObject(name)) { // expand if object\n          for (attName in name) {\n            if (!hasProp.call(name, attName)) continue;\n            attValue = name[attName];\n            this.attribute(attName, attValue);\n          }\n        } else {\n          if (isFunction(value)) {\n            value = value.apply();\n          }\n          if (this.options.keepNullAttributes && (value == null)) {\n            this.attribs[name] = new XMLAttribute(this, name, \"\");\n          } else if (value != null) {\n            this.attribs[name] = new XMLAttribute(this, name, value);\n          }\n        }\n        return this;\n      }\n\n      // Removes an attribute\n\n      // `name` attribute name\n      removeAttribute(name) {\n        var attName, j, len;\n        // Also defined in DOM level 1\n        // removeAttribute(name) removes an attribute by name.\n        if (name == null) {\n          throw new Error(\"Missing attribute name. \" + this.debugInfo());\n        }\n        name = getValue(name);\n        if (Array.isArray(name)) { // expand if array\n          for (j = 0, len = name.length; j < len; j++) {\n            attName = name[j];\n            delete this.attribs[attName];\n          }\n        } else {\n          delete this.attribs[name];\n        }\n        return this;\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      // `options.allowEmpty` do not self close empty element tags\n      toString(options) {\n        return this.options.writer.element(this, this.options.writer.filterOptions(options));\n      }\n\n      // Aliases\n      att(name, value) {\n        return this.attribute(name, value);\n      }\n\n      a(name, value) {\n        return this.attribute(name, value);\n      }\n\n      // DOM Level 1\n      getAttribute(name) {\n        if (this.attribs.hasOwnProperty(name)) {\n          return this.attribs[name].value;\n        } else {\n          return null;\n        }\n      }\n\n      setAttribute(name, value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getAttributeNode(name) {\n        if (this.attribs.hasOwnProperty(name)) {\n          return this.attribs[name];\n        } else {\n          return null;\n        }\n      }\n\n      setAttributeNode(newAttr) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      removeAttributeNode(oldAttr) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByTagName(name) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM Level 2\n      getAttributeNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      setAttributeNS(namespaceURI, qualifiedName, value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      removeAttributeNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getAttributeNodeNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      setAttributeNodeNS(newAttr) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByTagNameNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      hasAttribute(name) {\n        return this.attribs.hasOwnProperty(name);\n      }\n\n      hasAttributeNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM Level 3\n      setIdAttribute(name, isId) {\n        if (this.attribs.hasOwnProperty(name)) {\n          return this.attribs[name].isId;\n        } else {\n          return isId;\n        }\n      }\n\n      setIdAttributeNS(namespaceURI, localName, isId) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      setIdAttributeNode(idAttr, isId) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM Level 4\n      getElementsByTagName(tagname) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByTagNameNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByClassName(classNames) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      isEqualNode(node) {\n        var i, j, ref;\n        if (!super.isEqualNode(node)) {\n          return false;\n        }\n        if (node.namespaceURI !== this.namespaceURI) {\n          return false;\n        }\n        if (node.prefix !== this.prefix) {\n          return false;\n        }\n        if (node.localName !== this.localName) {\n          return false;\n        }\n        if (node.attribs.length !== this.attribs.length) {\n          return false;\n        }\n        for (i = j = 0, ref = this.attribs.length - 1; (0 <= ref ? j <= ref : j >= ref); i = 0 <= ref ? ++j : --j) {\n          if (!this.attribs[i].isEqualNode(node.attribs[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLElement.prototype, 'tagName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    // DOM level 4\n    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'id', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'className', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'classList', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'attributes', {\n      get: function() {\n        if (!this.attributeMap || !this.attributeMap.nodes) {\n          this.attributeMap = new XMLNamedNodeMap(this.attribs);\n        }\n        return this.attributeMap;\n      }\n    });\n\n    return XMLElement;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var XMLCharacterData, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  // Represents a character data node\n  module.exports = XMLCharacterData = (function() {\n    class XMLCharacterData extends XMLNode {\n      // Initializes a new instance of `XMLCharacterData`\n\n      constructor(parent) {\n        super(parent);\n        this.value = '';\n      }\n\n      \n      // Creates and returns a deep clone of `this`\n      clone() {\n        return Object.create(this);\n      }\n\n      // DOM level 1 functions to be implemented later\n      substringData(offset, count) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      appendData(arg) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      insertData(offset, arg) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      deleteData(offset, count) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      replaceData(offset, count, arg) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      isEqualNode(node) {\n        if (!super.isEqualNode(node)) {\n          return false;\n        }\n        if (node.data !== this.data) {\n          return false;\n        }\n        return true;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function() {\n        return this.value.length;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    return XMLCharacterData;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLCData, XMLCharacterData;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  // Represents a  CDATA node\n  module.exports = XMLCData = class XMLCData extends XMLCharacterData {\n    // Initializes a new instance of `XMLCData`\n\n    // `text` CDATA text\n    constructor(parent, text) {\n      super(parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLCharacterData, XMLComment;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  // Represents a comment node\n  module.exports = XMLComment = class XMLComment extends XMLCharacterData {\n    // Initializes a new instance of `XMLComment`\n\n    // `text` comment text\n    constructor(parent, text) {\n      super(parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.name = \"#comment\";\n      this.type = NodeType.Comment;\n      this.value = this.stringify.comment(text);\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.comment(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDeclaration, XMLNode, isObject;\n\n  ({isObject} = require('./Utility'));\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents the XML declaration\n  module.exports = XMLDeclaration = class XMLDeclaration extends XMLNode {\n    // Initializes a new instance of `XMLDeclaration`\n\n    // `parent` the document object\n\n    // `version` A version number string, e.g. 1.0\n    // `encoding` Encoding declaration, e.g. UTF-8\n    // `standalone` standalone document declaration: true or false\n    constructor(parent, version, encoding, standalone) {\n      super(parent);\n      // arguments may also be passed as an object\n      if (isObject(version)) {\n        ({version, encoding, standalone} = version);\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    // Converts to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDAttList, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents an attribute list\n  module.exports = XMLDTDAttList = class XMLDTDAttList extends XMLNode {\n    // Initializes a new instance of `XMLDTDAttList`\n\n    // `parent` the parent `XMLDocType` element\n    // `elementName` the name of the element containing this attribute\n    // `attributeName` attribute name\n    // `attributeType` type of the attribute\n    // `defaultValueType` default value type (either #REQUIRED, #IMPLIED,\n    //                    #FIXED or #DEFAULT)\n    // `defaultValue` default value of the attribute\n    //                (only used for #FIXED or #DEFAULT)\n    constructor(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      super(parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      this.elementName = this.stringify.name(elementName);\n      this.type = NodeType.AttributeDeclaration;\n      this.attributeName = this.stringify.name(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      if (defaultValue) {\n        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      }\n      this.defaultValueType = defaultValueType;\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject;\n\n  ({isObject} = require('./Utility'));\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents an entity declaration in the DTD\n  module.exports = XMLDTDEntity = (function() {\n    class XMLDTDEntity extends XMLNode {\n      // Initializes a new instance of `XMLDTDEntity`\n\n      // `parent` the parent `XMLDocType` element\n      // `pe` whether this is a parameter entity or a general entity\n      //      defaults to `false` (general entity)\n      // `name` the name of the entity\n      // `value` internal entity value or an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      // `value.nData` notation declaration\n      constructor(parent, pe, name, value) {\n        super(parent);\n        if (name == null) {\n          throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n        }\n        if (value == null) {\n          throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n        }\n        this.pe = !!pe;\n        this.name = this.stringify.name(name);\n        this.type = NodeType.EntityDeclaration;\n        if (!isObject(value)) {\n          this.value = this.stringify.dtdEntityValue(value);\n          this.internal = true;\n        } else {\n          if (!value.pubID && !value.sysID) {\n            throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n          }\n          if (value.pubID && !value.sysID) {\n            throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n          }\n          this.internal = false;\n          if (value.pubID != null) {\n            this.pubID = this.stringify.dtdPubID(value.pubID);\n          }\n          if (value.sysID != null) {\n            this.sysID = this.stringify.dtdSysID(value.sysID);\n          }\n          if (value.nData != null) {\n            this.nData = this.stringify.dtdNData(value.nData);\n          }\n          if (this.pe && this.nData) {\n            throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n          }\n        }\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    return XMLDTDEntity;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDElement, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents an attribute\n  module.exports = XMLDTDElement = class XMLDTDElement extends XMLNode {\n    // Initializes a new instance of `XMLDTDElement`\n\n    // `parent` the parent `XMLDocType` element\n    // `name` element name\n    // `value` element content (defaults to #PCDATA)\n    constructor(parent, name, value) {\n      super(parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDNotation, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents a NOTATION entry in the DTD\n  module.exports = XMLDTDNotation = (function() {\n    class XMLDTDNotation extends XMLNode {\n      // Initializes a new instance of `XMLDTDNotation`\n\n      // `parent` the parent `XMLDocType` element\n      // `name` the name of the notation\n      // `value` an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      constructor(parent, name, value) {\n        super(parent);\n        if (name == null) {\n          throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n        }\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n        this.name = this.stringify.name(name);\n        this.type = NodeType.NotationDeclaration;\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    return XMLDTDNotation;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject;\n\n  ({isObject} = require('./Utility'));\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  // Represents doctype declaration\n  module.exports = XMLDocType = (function() {\n    class XMLDocType extends XMLNode {\n      // Initializes a new instance of `XMLDocType`\n\n      // `parent` the document object\n\n      // `pubID` public identifier of the external subset\n      // `sysID` system identifier of the external subset\n      constructor(parent, pubID, sysID) {\n        var child, i, len, ref;\n        super(parent);\n        this.type = NodeType.DocType;\n        // set DTD name to the name of the root node\n        if (parent.children) {\n          ref = parent.children;\n          for (i = 0, len = ref.length; i < len; i++) {\n            child = ref[i];\n            if (child.type === NodeType.Element) {\n              this.name = child.name;\n              break;\n            }\n          }\n        }\n        this.documentObject = parent;\n        // arguments may also be passed as an object\n        if (isObject(pubID)) {\n          ({pubID, sysID} = pubID);\n        }\n        if (sysID == null) {\n          [sysID, pubID] = [pubID, sysID];\n        }\n        if (pubID != null) {\n          this.pubID = this.stringify.dtdPubID(pubID);\n        }\n        if (sysID != null) {\n          this.sysID = this.stringify.dtdSysID(sysID);\n        }\n      }\n\n      // Creates an element type declaration\n\n      // `name` element name\n      // `value` element content (defaults to #PCDATA)\n      element(name, value) {\n        var child;\n        child = new XMLDTDElement(this, name, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates an attribute declaration\n\n      // `elementName` the name of the element containing this attribute\n      // `attributeName` attribute name\n      // `attributeType` type of the attribute (defaults to CDATA)\n      // `defaultValueType` default value type (either #REQUIRED, #IMPLIED, #FIXED or\n      //                    #DEFAULT) (defaults to #IMPLIED)\n      // `defaultValue` default value of the attribute\n      //                (only used for #FIXED or #DEFAULT)\n      attList(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n        var child;\n        child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a general entity declaration\n\n      // `name` the name of the entity\n      // `value` internal entity value or an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      // `value.nData` notation declaration\n      entity(name, value) {\n        var child;\n        child = new XMLDTDEntity(this, false, name, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a parameter entity declaration\n\n      // `name` the name of the entity\n      // `value` internal entity value or an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      pEntity(name, value) {\n        var child;\n        child = new XMLDTDEntity(this, true, name, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a NOTATION declaration\n\n      // `name` the name of the notation\n      // `value` an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      notation(name, value) {\n        var child;\n        child = new XMLDTDNotation(this, name, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Converts to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n      }\n\n      // Aliases\n      ele(name, value) {\n        return this.element(name, value);\n      }\n\n      att(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n        return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      }\n\n      ent(name, value) {\n        return this.entity(name, value);\n      }\n\n      pent(name, value) {\n        return this.pEntity(name, value);\n      }\n\n      not(name, value) {\n        return this.notation(name, value);\n      }\n\n      up() {\n        return this.root() || this.documentObject;\n      }\n\n      isEqualNode(node) {\n        if (!super.isEqualNode(node)) {\n          return false;\n        }\n        if (node.name !== this.name) {\n          return false;\n        }\n        if (node.publicId !== this.publicId) {\n          return false;\n        }\n        if (node.systemId !== this.systemId) {\n          return false;\n        }\n        return true;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    // DOM level 2\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    return XMLDocType;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLNode, XMLRaw;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  // Represents a  raw node\n  module.exports = XMLRaw = class XMLRaw extends XMLNode {\n    // Initializes a new instance of `XMLRaw`\n\n    // `text` raw text\n    constructor(parent, text) {\n      super(parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text. \" + this.debugInfo());\n      }\n      this.type = NodeType.Raw;\n      this.value = this.stringify.raw(text);\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.raw(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLCharacterData, XMLText;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  // Represents a text node\n  module.exports = XMLText = (function() {\n    class XMLText extends XMLCharacterData {\n      // Initializes a new instance of `XMLText`\n\n      // `text` element text\n      constructor(parent, text) {\n        super(parent);\n        if (text == null) {\n          throw new Error(\"Missing element text. \" + this.debugInfo());\n        }\n        this.name = \"#text\";\n        this.type = NodeType.Text;\n        this.value = this.stringify.text(text);\n      }\n\n      // Creates and returns a deep clone of `this`\n      clone() {\n        return Object.create(this);\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.text(this, this.options.writer.filterOptions(options));\n      }\n\n      // DOM level 1 functions to be implemented later\n      splitText(offset) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM level 3 functions to be implemented later\n      replaceWholeText(content) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n    };\n\n    // DOM level 3\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function() {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n        str += this.data;\n        next = this.nextSibling;\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n        return str;\n      }\n    });\n\n    return XMLText;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLCharacterData, XMLProcessingInstruction;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  // Represents a processing instruction\n  module.exports = XMLProcessingInstruction = class XMLProcessingInstruction extends XMLCharacterData {\n    // Initializes a new instance of `XMLProcessingInstruction`\n\n    // `parent` the parent node\n    // `target` instruction target\n    // `value` instruction value\n    constructor(parent, target, value) {\n      super(parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    }\n\n    isEqualNode(node) {\n      if (!super.isEqualNode(node)) {\n        return false;\n      }\n      if (node.target !== this.target) {\n        return false;\n      }\n      return true;\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDummy, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents a  raw node\n  module.exports = XMLDummy = class XMLDummy extends XMLNode {\n    // Initializes a new instance of `XMLDummy`\n\n    // `XMLDummy` is a special node representing a node with \n    // a null value. Dummy nodes are created while recursively\n    // building the XML tree. Simply skipping null values doesn't\n    // work because that would break the recursive chain.\n    constructor(parent) {\n      super(parent);\n      this.type = NodeType.Dummy;\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return '';\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  // Represents a list of nodes\n  var XMLNodeList;\n\n  module.exports = XMLNodeList = (function() {\n    class XMLNodeList {\n      // Initializes a new instance of `XMLNodeList`\n      // This is just a wrapper around an ordinary\n      // JS array.\n\n      // `nodes` the array containing nodes.\n      constructor(nodes) {\n        this.nodes = nodes;\n      }\n\n      // Creates and returns a deep clone of `this`\n\n      clone() {\n        // this class should not be cloned since it wraps\n        // around a given array. The calling function should check\n        // whether the wrapped array is null and supply a new array\n        // (from the clone).\n        return this.nodes = null;\n      }\n\n      // DOM Level 1\n      item(index) {\n        return this.nodes[index] || null;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLNodeList.prototype, 'length', {\n      get: function() {\n        return this.nodes.length || 0;\n      }\n    });\n\n    return XMLNodeList;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  module.exports = {\n    Disconnected: 1,\n    Preceding: 2,\n    Following: 4,\n    Contains: 8,\n    ContainedBy: 16,\n    ImplementationSpecific: 32\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject,\n    hasProp = {}.hasOwnProperty,\n    splice = [].splice;\n\n  ({isObject, isFunction, isEmpty, getValue} = require('./Utility'));\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  XMLDummy = null;\n\n  NodeType = null;\n\n  XMLNodeList = null;\n\n  XMLNamedNodeMap = null;\n\n  DocumentPosition = null;\n\n  // Represents a generic XMl element\n  module.exports = XMLNode = (function() {\n    class XMLNode {\n      // Initializes a new instance of `XMLNode`\n\n      // `parent` the parent node\n      constructor(parent1) {\n        this.parent = parent1;\n        if (this.parent) {\n          this.options = this.parent.options;\n          this.stringify = this.parent.stringify;\n        }\n        this.value = null;\n        this.children = [];\n        this.baseURI = null;\n        // first execution, load dependencies that are otherwise\n        // circular (so we can't load them at the top)\n        if (!XMLElement) {\n          XMLElement = require('./XMLElement');\n          XMLCData = require('./XMLCData');\n          XMLComment = require('./XMLComment');\n          XMLDeclaration = require('./XMLDeclaration');\n          XMLDocType = require('./XMLDocType');\n          XMLRaw = require('./XMLRaw');\n          XMLText = require('./XMLText');\n          XMLProcessingInstruction = require('./XMLProcessingInstruction');\n          XMLDummy = require('./XMLDummy');\n          NodeType = require('./NodeType');\n          XMLNodeList = require('./XMLNodeList');\n          XMLNamedNodeMap = require('./XMLNamedNodeMap');\n          DocumentPosition = require('./DocumentPosition');\n        }\n      }\n\n      \n      // Sets the parent node of this node and its children recursively\n\n      // `parent` the parent node\n      setParent(parent) {\n        var child, j, len, ref1, results;\n        this.parent = parent;\n        if (parent) {\n          this.options = parent.options;\n          this.stringify = parent.stringify;\n        }\n        ref1 = this.children;\n        results = [];\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          results.push(child.setParent(this));\n        }\n        return results;\n      }\n\n      // Creates a child element node\n\n      // `name` node name or an object describing the XML tree\n      // `attributes` an object containing name/value pairs of attributes\n      // `text` element text\n      element(name, attributes, text) {\n        var childNode, item, j, k, key, lastChild, len, len1, val;\n        lastChild = null;\n        if (attributes === null && (text == null)) {\n          [attributes, text] = [{}, null];\n        }\n        if (attributes == null) {\n          attributes = {};\n        }\n        attributes = getValue(attributes);\n        // swap argument order: text <-> attributes\n        if (!isObject(attributes)) {\n          [text, attributes] = [attributes, text];\n        }\n        if (name != null) {\n          name = getValue(name);\n        }\n        // expand if array\n        if (Array.isArray(name)) {\n          for (j = 0, len = name.length; j < len; j++) {\n            item = name[j];\n            lastChild = this.element(item);\n          }\n        // evaluate if function\n        } else if (isFunction(name)) {\n          lastChild = this.element(name.apply());\n        // expand if object\n        } else if (isObject(name)) {\n          for (key in name) {\n            if (!hasProp.call(name, key)) continue;\n            val = name[key];\n            if (isFunction(val)) {\n              // evaluate if function\n              val = val.apply();\n            }\n            // assign attributes\n            if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n              lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n            // skip empty arrays\n            } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n              lastChild = this.dummy();\n            // empty objects produce one node\n            } else if (isObject(val) && isEmpty(val)) {\n              lastChild = this.element(key);\n            // skip null and undefined nodes\n            } else if (!this.options.keepNullNodes && (val == null)) {\n              lastChild = this.dummy();\n            \n            // expand list by creating child nodes\n            } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n              for (k = 0, len1 = val.length; k < len1; k++) {\n                item = val[k];\n                childNode = {};\n                childNode[key] = item;\n                lastChild = this.element(childNode);\n              }\n            \n            // expand child nodes under parent\n            } else if (isObject(val)) {\n              // if the key is #text expand child nodes under this node to support mixed content\n              if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n                lastChild = this.element(val);\n              } else {\n                lastChild = this.element(key);\n                lastChild.element(val);\n              }\n            } else {\n              \n              // text node\n              lastChild = this.element(key, val);\n            }\n          }\n        // skip null nodes\n        } else if (!this.options.keepNullNodes && text === null) {\n          lastChild = this.dummy();\n        } else {\n          // text node\n          if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n            lastChild = this.text(text);\n          // cdata node\n          } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n            lastChild = this.cdata(text);\n          // comment node\n          } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n            lastChild = this.comment(text);\n          // raw text node\n          } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n            lastChild = this.raw(text);\n          // processing instruction\n          } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n            lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n          } else {\n            // element node\n            lastChild = this.node(name, attributes, text);\n          }\n        }\n        if (lastChild == null) {\n          throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n        }\n        return lastChild;\n      }\n\n      // Creates a child element node before the current node\n\n      // `name` node name or an object describing the XML tree\n      // `attributes` an object containing name/value pairs of attributes\n      // `text` element text\n      insertBefore(name, attributes, text) {\n        var child, i, newChild, refChild, removed;\n        // DOM level 1\n        // insertBefore(newChild, refChild) inserts the child node newChild before refChild\n        if (name != null ? name.type : void 0) {\n          newChild = name;\n          refChild = attributes;\n          newChild.setParent(this);\n          if (refChild) {\n            // temporarily remove children starting *with* refChild\n            i = children.indexOf(refChild);\n            removed = children.splice(i);\n            \n            // add the new child\n            children.push(newChild);\n            \n            // add back removed children after new child\n            Array.prototype.push.apply(children, removed);\n          } else {\n            children.push(newChild);\n          }\n          return newChild;\n        } else {\n          if (this.isRoot) {\n            throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n          }\n          \n          // temporarily remove children starting *with* this\n          i = this.parent.children.indexOf(this);\n          removed = this.parent.children.splice(i);\n          \n          // add the new child\n          child = this.parent.element(name, attributes, text);\n          \n          // add back removed children after new child\n          Array.prototype.push.apply(this.parent.children, removed);\n          return child;\n        }\n      }\n\n      // Creates a child element node after the current node\n\n      // `name` node name or an object describing the XML tree\n      // `attributes` an object containing name/value pairs of attributes\n      // `text` element text\n      insertAfter(name, attributes, text) {\n        var child, i, removed;\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n        \n        // temporarily remove children starting *after* this\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i + 1);\n        \n        // add the new child\n        child = this.parent.element(name, attributes, text);\n        \n        // add back removed children after new child\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n\n      // Deletes a child element node\n\n      remove() {\n        var i, ref1;\n        if (this.isRoot) {\n          throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n        }\n        i = this.parent.children.indexOf(this);\n        splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n        return this.parent;\n      }\n\n      // Creates a node\n\n      // `name` name of the node\n      // `attributes` an object containing name/value pairs of attributes\n      // `text` element text\n      node(name, attributes, text) {\n        var child;\n        if (name != null) {\n          name = getValue(name);\n        }\n        attributes || (attributes = {});\n        attributes = getValue(attributes);\n        // swap argument order: text <-> attributes\n        if (!isObject(attributes)) {\n          [text, attributes] = [attributes, text];\n        }\n        child = new XMLElement(this, name, attributes);\n        if (text != null) {\n          child.text(text);\n        }\n        this.children.push(child);\n        return child;\n      }\n\n      // Creates a text node\n\n      // `value` element text\n      text(value) {\n        var child;\n        if (isObject(value)) {\n          this.element(value);\n        }\n        child = new XMLText(this, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a CDATA node\n\n      // `value` element text without CDATA delimiters\n      cdata(value) {\n        var child;\n        child = new XMLCData(this, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a comment node\n\n      // `value` comment text\n      comment(value) {\n        var child;\n        child = new XMLComment(this, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a comment node before the current node\n\n      // `value` comment text\n      commentBefore(value) {\n        var child, i, removed;\n        // temporarily remove children starting *with* this\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        // add the new child\n        child = this.parent.comment(value);\n        // add back removed children after new child\n        Array.prototype.push.apply(this.parent.children, removed);\n        return this;\n      }\n\n      // Creates a comment node after the current node\n\n      // `value` comment text\n      commentAfter(value) {\n        var child, i, removed;\n        // temporarily remove children starting *after* this\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i + 1);\n        // add the new child\n        child = this.parent.comment(value);\n        // add back removed children after new child\n        Array.prototype.push.apply(this.parent.children, removed);\n        return this;\n      }\n\n      // Adds unescaped raw text\n\n      // `value` text\n      raw(value) {\n        var child;\n        child = new XMLRaw(this, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Adds a dummy node\n      dummy() {\n        var child;\n        child = new XMLDummy(this);\n        // Normally when a new node is created it is added to the child node collection.\n        // However, dummy nodes are never added to the XML tree. They are created while\n        // converting JS objects to XML nodes in order not to break the recursive function\n        // chain. They can be thought of as invisible nodes. They can be traversed through\n        // by using prev(), next(), up(), etc. functions but they do not exists in the tree.\n\n        // @children.push child\n        return child;\n      }\n\n      // Adds a processing instruction\n\n      // `target` instruction target\n      // `value` instruction value\n      instruction(target, value) {\n        var insTarget, insValue, instruction, j, len;\n        if (target != null) {\n          target = getValue(target);\n        }\n        if (value != null) {\n          value = getValue(value);\n        }\n        if (Array.isArray(target)) { // expand if array\n          for (j = 0, len = target.length; j < len; j++) {\n            insTarget = target[j];\n            this.instruction(insTarget);\n          }\n        } else if (isObject(target)) { // expand if object\n          for (insTarget in target) {\n            if (!hasProp.call(target, insTarget)) continue;\n            insValue = target[insTarget];\n            this.instruction(insTarget, insValue);\n          }\n        } else {\n          if (isFunction(value)) {\n            value = value.apply();\n          }\n          instruction = new XMLProcessingInstruction(this, target, value);\n          this.children.push(instruction);\n        }\n        return this;\n      }\n\n      // Creates a processing instruction node before the current node\n\n      // `target` instruction target\n      // `value` instruction value\n      instructionBefore(target, value) {\n        var child, i, removed;\n        // temporarily remove children starting *with* this\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        // add the new child\n        child = this.parent.instruction(target, value);\n        // add back removed children after new child\n        Array.prototype.push.apply(this.parent.children, removed);\n        return this;\n      }\n\n      // Creates a processing instruction node after the current node\n\n      // `target` instruction target\n      // `value` instruction value\n      instructionAfter(target, value) {\n        var child, i, removed;\n        // temporarily remove children starting *after* this\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i + 1);\n        // add the new child\n        child = this.parent.instruction(target, value);\n        // add back removed children after new child\n        Array.prototype.push.apply(this.parent.children, removed);\n        return this;\n      }\n\n      // Creates the xml declaration\n\n      // `version` A version number string, e.g. 1.0\n      // `encoding` Encoding declaration, e.g. UTF-8\n      // `standalone` standalone document declaration: true or false\n      declaration(version, encoding, standalone) {\n        var doc, xmldec;\n        doc = this.document();\n        xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n        // Replace XML declaration if exists, otherwise insert at top\n        if (doc.children.length === 0) {\n          doc.children.unshift(xmldec);\n        } else if (doc.children[0].type === NodeType.Declaration) {\n          doc.children[0] = xmldec;\n        } else {\n          doc.children.unshift(xmldec);\n        }\n        return doc.root() || doc;\n      }\n\n      // Creates the document type declaration\n\n      // `pubID` the public identifier of the external subset\n      // `sysID` the system identifier of the external subset\n      dtd(pubID, sysID) {\n        var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n        doc = this.document();\n        doctype = new XMLDocType(doc, pubID, sysID);\n        ref1 = doc.children;\n        // Replace DTD if exists\n        for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n          child = ref1[i];\n          if (child.type === NodeType.DocType) {\n            doc.children[i] = doctype;\n            return doctype;\n          }\n        }\n        ref2 = doc.children;\n        // insert before root node if the root node exists\n        for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n          child = ref2[i];\n          if (child.isRoot) {\n            doc.children.splice(i, 0, doctype);\n            return doctype;\n          }\n        }\n        // otherwise append to end\n        doc.children.push(doctype);\n        return doctype;\n      }\n\n      // Gets the parent node\n      up() {\n        if (this.isRoot) {\n          throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n        }\n        return this.parent;\n      }\n\n      // Gets the root node\n      root() {\n        var node;\n        node = this;\n        while (node) {\n          if (node.type === NodeType.Document) {\n            return node.rootObject;\n          } else if (node.isRoot) {\n            return node;\n          } else {\n            node = node.parent;\n          }\n        }\n      }\n\n      // Gets the node representing the XML document\n      document() {\n        var node;\n        node = this;\n        while (node) {\n          if (node.type === NodeType.Document) {\n            return node;\n          } else {\n            node = node.parent;\n          }\n        }\n      }\n\n      // Ends the document and converts string\n      end(options) {\n        return this.document().end(options);\n      }\n\n      // Gets the previous node\n      prev() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        if (i < 1) {\n          throw new Error(\"Already at the first node. \" + this.debugInfo());\n        }\n        return this.parent.children[i - 1];\n      }\n\n      // Gets the next node\n      next() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        if (i === -1 || i === this.parent.children.length - 1) {\n          throw new Error(\"Already at the last node. \" + this.debugInfo());\n        }\n        return this.parent.children[i + 1];\n      }\n\n      // Imports cloned root from another XML document\n\n      // `doc` the XML document to insert nodes from\n      importDocument(doc) {\n        var child, clonedRoot, j, len, ref1;\n        clonedRoot = doc.root().clone();\n        clonedRoot.parent = this;\n        clonedRoot.isRoot = false;\n        this.children.push(clonedRoot);\n        // set properties if imported element becomes the root node\n        if (this.type === NodeType.Document) {\n          clonedRoot.isRoot = true;\n          clonedRoot.documentObject = this;\n          this.rootObject = clonedRoot;\n          // set dtd name\n          if (this.children) {\n            ref1 = this.children;\n            for (j = 0, len = ref1.length; j < len; j++) {\n              child = ref1[j];\n              if (child.type === NodeType.DocType) {\n                child.name = clonedRoot.name;\n                break;\n              }\n            }\n          }\n        }\n        return this;\n      }\n\n      \n      // Returns debug string for this node\n      debugInfo(name) {\n        var ref1, ref2;\n        name = name || this.name;\n        if ((name == null) && !((ref1 = this.parent) != null ? ref1.name : void 0)) {\n          return \"\";\n        } else if (name == null) {\n          return \"parent: <\" + this.parent.name + \">\";\n        } else if (!((ref2 = this.parent) != null ? ref2.name : void 0)) {\n          return \"node: <\" + name + \">\";\n        } else {\n          return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n        }\n      }\n\n      // Aliases\n      ele(name, attributes, text) {\n        return this.element(name, attributes, text);\n      }\n\n      nod(name, attributes, text) {\n        return this.node(name, attributes, text);\n      }\n\n      txt(value) {\n        return this.text(value);\n      }\n\n      dat(value) {\n        return this.cdata(value);\n      }\n\n      com(value) {\n        return this.comment(value);\n      }\n\n      ins(target, value) {\n        return this.instruction(target, value);\n      }\n\n      doc() {\n        return this.document();\n      }\n\n      dec(version, encoding, standalone) {\n        return this.declaration(version, encoding, standalone);\n      }\n\n      e(name, attributes, text) {\n        return this.element(name, attributes, text);\n      }\n\n      n(name, attributes, text) {\n        return this.node(name, attributes, text);\n      }\n\n      t(value) {\n        return this.text(value);\n      }\n\n      d(value) {\n        return this.cdata(value);\n      }\n\n      c(value) {\n        return this.comment(value);\n      }\n\n      r(value) {\n        return this.raw(value);\n      }\n\n      i(target, value) {\n        return this.instruction(target, value);\n      }\n\n      u() {\n        return this.up();\n      }\n\n      // can be deprecated in a future release\n      importXMLBuilder(doc) {\n        return this.importDocument(doc);\n      }\n\n      // Adds or modifies an attribute.\n\n      // `name` attribute name\n      // `value` attribute value\n      attribute(name, value) {\n        throw new Error(\"attribute() applies to element nodes only.\");\n      }\n\n      att(name, value) {\n        return this.attribute(name, value);\n      }\n\n      a(name, value) {\n        return this.attribute(name, value);\n      }\n\n      // Removes an attribute\n\n      // `name` attribute name\n      removeAttribute(name) {\n        throw new Error(\"attribute() applies to element nodes only.\");\n      }\n\n      // DOM level 1 functions to be implemented later\n      replaceChild(newChild, oldChild) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      removeChild(oldChild) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      appendChild(newChild) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      hasChildNodes() {\n        return this.children.length !== 0;\n      }\n\n      cloneNode(deep) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      normalize() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM level 2\n      isSupported(feature, version) {\n        return true;\n      }\n\n      hasAttributes() {\n        return this.attribs.length !== 0;\n      }\n\n      // DOM level 3 functions to be implemented later\n      compareDocumentPosition(other) {\n        var ref, res;\n        ref = this;\n        if (ref === other) {\n          return 0;\n        } else if (this.document() !== other.document()) {\n          res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n          if (Math.random() < 0.5) {\n            res |= DocumentPosition.Preceding;\n          } else {\n            res |= DocumentPosition.Following;\n          }\n          return res;\n        } else if (ref.isAncestor(other)) {\n          return DocumentPosition.Contains | DocumentPosition.Preceding;\n        } else if (ref.isDescendant(other)) {\n          return DocumentPosition.Contains | DocumentPosition.Following;\n        } else if (ref.isPreceding(other)) {\n          return DocumentPosition.Preceding;\n        } else {\n          return DocumentPosition.Following;\n        }\n      }\n\n      isSameNode(other) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      lookupPrefix(namespaceURI) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      isDefaultNamespace(namespaceURI) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      lookupNamespaceURI(prefix) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      isEqualNode(node) {\n        var i, j, ref1;\n        if (node.nodeType !== this.nodeType) {\n          return false;\n        }\n        if (node.children.length !== this.children.length) {\n          return false;\n        }\n        for (i = j = 0, ref1 = this.children.length - 1; (0 <= ref1 ? j <= ref1 : j >= ref1); i = 0 <= ref1 ? ++j : --j) {\n          if (!this.children[i].isEqualNode(node.children[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      getFeature(feature, version) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      setUserData(key, data, handler) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getUserData(key) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // Returns true if other is an inclusive descendant of node,\n      // and false otherwise.\n      contains(other) {\n        if (!other) {\n          return false;\n        }\n        return other === this || this.isDescendant(other);\n      }\n\n      // An object A is called a descendant of an object B, if either A is \n      // a child of B or A is a child of an object C that is a descendant of B.\n      isDescendant(node) {\n        var child, isDescendantChild, j, len, ref1;\n        ref1 = this.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          if (node === child) {\n            return true;\n          }\n          isDescendantChild = child.isDescendant(node);\n          if (isDescendantChild) {\n            return true;\n          }\n        }\n        return false;\n      }\n\n      // An object A is called an ancestor of an object B if and only if\n      // B is a descendant of A.\n      isAncestor(node) {\n        return node.isDescendant(this);\n      }\n\n      // An object A is preceding an object B if A and B are in the \n      // same tree and A comes before B in tree order.\n      isPreceding(node) {\n        var nodePos, thisPos;\n        nodePos = this.treePosition(node);\n        thisPos = this.treePosition(this);\n        if (nodePos === -1 || thisPos === -1) {\n          return false;\n        } else {\n          return nodePos < thisPos;\n        }\n      }\n\n      // An object A is folllowing an object B if A and B are in the \n      // same tree and A comes after B in tree order.\n      isFollowing(node) {\n        var nodePos, thisPos;\n        nodePos = this.treePosition(node);\n        thisPos = this.treePosition(this);\n        if (nodePos === -1 || thisPos === -1) {\n          return false;\n        } else {\n          return nodePos > thisPos;\n        }\n      }\n\n      // Returns the preorder position of the given node in the tree, or -1\n      // if the node is not in the tree.\n      treePosition(node) {\n        var found, pos;\n        pos = 0;\n        found = false;\n        this.foreachTreeNode(this.document(), function(childNode) {\n          pos++;\n          if (!found && childNode === node) {\n            return found = true;\n          }\n        });\n        if (found) {\n          return pos;\n        } else {\n          return -1;\n        }\n      }\n\n      \n      // Depth-first preorder traversal through the XML tree\n      foreachTreeNode(node, func) {\n        var child, j, len, ref1, res;\n        node || (node = this.document());\n        ref1 = node.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          if (res = func(child)) {\n            return res;\n          } else {\n            res = this.foreachTreeNode(child, func);\n            if (res) {\n              return res;\n            }\n          }\n        }\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function() {\n        return this.value;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function() {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n        return this.childNodeList;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function() {\n        return this.children[0] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function() {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function() {\n        return this.document() || null;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function() {\n        var child, j, len, ref1, str;\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref1 = this.children;\n          for (j = 0, len = ref1.length; j < len; j++) {\n            child = ref1[j];\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function(value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    return XMLNode;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  // Converts values to strings\n  var XMLStringifier,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    class XMLStringifier {\n      // Initializes a new instance of `XMLStringifier`\n\n      // `options.version` The version number string of the XML spec to validate against, e.g. 1.0\n      // `options.noDoubleEncoding` whether existing html entities are encoded: true or false\n      // `options.stringify` a set of functions to use for converting values to strings\n      // `options.noValidation` whether values will be validated and escaped or returned as is\n      // `options.invalidCharReplacement` a character to replace invalid characters and disable character validation\n      constructor(options) {\n        var key, ref, value;\n        // Checks whether the given string contains legal characters\n        // Fails with an exception on error\n\n        // `str` the string to check\n        this.assertLegalChar = this.assertLegalChar.bind(this);\n        // Checks whether the given string contains legal characters for a name\n        // Fails with an exception on error\n\n        // `str` the string to check\n        this.assertLegalName = this.assertLegalName.bind(this);\n        options || (options = {});\n        this.options = options;\n        if (!this.options.version) {\n          this.options.version = '1.0';\n        }\n        ref = options.stringify || {};\n        for (key in ref) {\n          if (!hasProp.call(ref, key)) continue;\n          value = ref[key];\n          this[key] = value;\n        }\n      }\n\n      // Defaults\n      name(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalName('' + val || '');\n      }\n\n      text(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar(this.textEscape('' + val || ''));\n      }\n\n      cdata(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        val = '' + val || '';\n        val = val.replace(']]>', ']]]]><![CDATA[>');\n        return this.assertLegalChar(val);\n      }\n\n      comment(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        val = '' + val || '';\n        if (val.match(/--/)) {\n          throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n        }\n        return this.assertLegalChar(val);\n      }\n\n      raw(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return '' + val || '';\n      }\n\n      attValue(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar(this.attEscape(val = '' + val || ''));\n      }\n\n      insTarget(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      insValue(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        val = '' + val || '';\n        if (val.match(/\\?>/)) {\n          throw new Error(\"Invalid processing instruction value: \" + val);\n        }\n        return this.assertLegalChar(val);\n      }\n\n      xmlVersion(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        val = '' + val || '';\n        if (!val.match(/1\\.[0-9]+/)) {\n          throw new Error(\"Invalid version number: \" + val);\n        }\n        return val;\n      }\n\n      xmlEncoding(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        val = '' + val || '';\n        if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n          throw new Error(\"Invalid encoding: \" + val);\n        }\n        return this.assertLegalChar(val);\n      }\n\n      xmlStandalone(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        if (val) {\n          return \"yes\";\n        } else {\n          return \"no\";\n        }\n      }\n\n      dtdPubID(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdSysID(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdElementValue(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdAttType(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdAttDefault(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdEntityValue(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdNData(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      assertLegalChar(str) {\n        var regex, res;\n        if (this.options.noValidation) {\n          return str;\n        }\n        if (this.options.version === '1.0') {\n          // Valid characters from https://www.w3.org/TR/xml/#charsets\n          // any Unicode character, excluding the surrogate blocks, FFFE, and FFFF.\n          // #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]\n          // This ES5 compatible Regexp has been generated using the \"regenerate\" NPM module:\n          //   let xml_10_InvalidChars = regenerate()\n          //     .addRange(0x0000, 0x0008)\n          //     .add(0x000B, 0x000C)\n          //     .addRange(0x000E, 0x001F)\n          //     .addRange(0xD800, 0xDFFF)\n          //     .addRange(0xFFFE, 0xFFFF)\n          regex = /[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g;\n          if (this.options.invalidCharReplacement !== void 0) {\n            str = str.replace(regex, this.options.invalidCharReplacement);\n          } else if (res = str.match(regex)) {\n            throw new Error(`Invalid character in string: ${str} at index ${res.index}`);\n          }\n        } else if (this.options.version === '1.1') {\n          // Valid characters from https://www.w3.org/TR/xml11/#charsets\n          // any Unicode character, excluding the surrogate blocks, FFFE, and FFFF.\n          // [#x1-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]\n          // This ES5 compatible Regexp has been generated using the \"regenerate\" NPM module:\n          //   let xml_11_InvalidChars = regenerate()\n          //     .add(0x0000)\n          //     .addRange(0xD800, 0xDFFF)\n          //     .addRange(0xFFFE, 0xFFFF)\n          regex = /[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/g;\n          if (this.options.invalidCharReplacement !== void 0) {\n            str = str.replace(regex, this.options.invalidCharReplacement);\n          } else if (res = str.match(regex)) {\n            throw new Error(`Invalid character in string: ${str} at index ${res.index}`);\n          }\n        }\n        return str;\n      }\n\n      assertLegalName(str) {\n        var regex;\n        if (this.options.noValidation) {\n          return str;\n        }\n        str = this.assertLegalChar(str);\n        regex = /^([:A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])([\\x2D\\.0-:A-Z_a-z\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])*$/;\n        if (!str.match(regex)) {\n          throw new Error(`Invalid character in name: ${str}`);\n        }\n        return str;\n      }\n\n      // Escapes special characters in text\n\n      // See http://www.w3.org/TR/2000/WD-xml-c14n-20000119.html#charescaping\n\n      // `str` the string to escape\n      textEscape(str) {\n        var ampregex;\n        if (this.options.noValidation) {\n          return str;\n        }\n        ampregex = this.options.noDoubleEncoding ? /(?!&(lt|gt|amp|apos|quot);)&/g : /&/g;\n        return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n      }\n\n      // Escapes special characters in attribute values\n\n      // See http://www.w3.org/TR/2000/WD-xml-c14n-20000119.html#charescaping\n\n      // `str` the string to escape\n      attEscape(str) {\n        var ampregex;\n        if (this.options.noValidation) {\n          return str;\n        }\n        ampregex = this.options.noDoubleEncoding ? /(?!&(lt|gt|amp|apos|quot);)&/g : /&/g;\n        return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n      }\n\n    };\n\n    // strings to match while converting from JS objects\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    return XMLStringifier;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  module.exports = {\n    None: 0,\n    OpenTag: 1,\n    InsideTag: 2,\n    CloseTag: 3\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,\n    hasProp = {}.hasOwnProperty;\n\n  ({assign} = require('./Utility'));\n\n  NodeType = require('./NodeType');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  WriterState = require('./WriterState');\n\n  // Base class for XML writers\n  module.exports = XMLWriterBase = class XMLWriterBase {\n    // Initializes a new instance of `XMLWriterBase`\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation string\n    // `options.newline` newline sequence\n    // `options.offset` a fixed number of indentations to add to every line\n    // `options.width` maximum column width\n    // `options.allowEmpty` do not self close empty element tags\n    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF\n    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements\n    constructor(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n\n    // Filters writer options and provides defaults\n\n    // `options` writer options\n    filterOptions(options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.width = (ref3 = options.width) != null ? ref3 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref4 = (ref5 = options.dontPrettyTextNodes) != null ? ref5 : options.dontprettytextnodes) != null ? ref4 : 0;\n      filteredOptions.spaceBeforeSlash = (ref6 = (ref7 = options.spaceBeforeSlash) != null ? ref7 : options.spacebeforeslash) != null ? ref6 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    }\n\n    // Returns the indentation string for the current level\n\n    // `node` current node\n    // `options` writer options\n    // `level` current indentation level\n    indent(node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    }\n\n    // Returns the newline string\n\n    // `node` current node\n    // `options` writer options\n    // `level` current indentation level\n    endline(node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    }\n\n    attribute(att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      if (options.pretty && options.width > 0) {\n        r = att.name + '=\"' + att.value + '\"';\n      } else {\n        r = ' ' + att.name + '=\"' + att.value + '\"';\n      }\n      this.closeAttribute(att, options, level);\n      return r;\n    }\n\n    cdata(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    comment(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    declaration(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    docType(node, options, level) {\n      var child, i, len1, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      // external identifier\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      // internal subset\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len1 = ref.length; i < len1; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      // close tag\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    element(node, options, level) {\n      var att, attLen, child, childNodeCount, firstChildNode, i, j, len, len1, len2, name, prettySuppressed, r, ratt, ref, ref1, ref2, ref3, rline;\n      level || (level = 0);\n      prettySuppressed = false;\n      // open tag\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<' + node.name;\n      // attributes\n      if (options.pretty && options.width > 0) {\n        len = r.length;\n        ref = node.attribs;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          ratt = this.attribute(att, options, level);\n          attLen = ratt.length;\n          if (len + attLen > options.width) {\n            rline = this.indent(node, options, level + 1) + ratt;\n            r += this.endline(node, options, level) + rline;\n            len = rline.length;\n          } else {\n            rline = ' ' + ratt;\n            r += rline;\n            len += rline.length;\n          }\n        }\n      } else {\n        ref1 = node.attribs;\n        for (name in ref1) {\n          if (!hasProp.call(ref1, name)) continue;\n          att = ref1[name];\n          r += this.attribute(att, options, level);\n        }\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw || e.type === NodeType.CData) && e.value === '';\n      })) {\n        // empty element\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw || firstChildNode.type === NodeType.CData) && (firstChildNode.value != null)) {\n        // do not indent text-only nodes\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        // if ANY are a text node, then suppress pretty now\n        if (options.dontPrettyTextNodes) {\n          ref2 = node.children;\n          for (i = 0, len1 = ref2.length; i < len1; i++) {\n            child = ref2[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw || child.type === NodeType.CData) && (child.value != null)) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        // close the opening tag, after dealing with newline\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref3 = node.children;\n        // inner tags\n        for (j = 0, len2 = ref3.length; j < len2; j++) {\n          child = ref3[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        // close tag\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    writeChildNode(node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    }\n\n    processingInstruction(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    raw(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    text(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    dtdAttList(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    dtdElement(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    dtdEntity(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    dtdNotation(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    openNode(node, options, level) {}\n\n    closeNode(node, options, level) {}\n\n    openAttribute(att, options, level) {}\n\n    closeAttribute(att, options, level) {}\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var XMLStringWriter, XMLWriterBase;\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  // Prints XML nodes as plain text\n  module.exports = XMLStringWriter = class XMLStringWriter extends XMLWriterBase {\n    // Initializes a new instance of `XMLStringWriter`\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation string\n    // `options.newline` newline sequence\n    // `options.offset` a fixed number of indentations to add to every line\n    // `options.allowEmpty` do not self close empty element tags\n    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF\n    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements\n    constructor(options) {\n      super(options);\n    }\n\n    document(doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      }\n      // remove trailing newline\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n      return r;\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject;\n\n  ({isPlainObject} = require('./Utility'));\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDOMConfiguration = require('./XMLDOMConfiguration');\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  // Represents an XML builder\n  module.exports = XMLDocument = (function() {\n    class XMLDocument extends XMLNode {\n      // Initializes a new instance of `XMLDocument`\n\n      // `options.keepNullNodes` whether nodes with null values will be kept\n      //     or ignored: true or false\n      // `options.keepNullAttributes` whether attributes with null values will be\n      //     kept or ignored: true or false\n      // `options.ignoreDecorators` whether decorator strings will be ignored when\n      //     converting JS objects: true or false\n      // `options.separateArrayItems` whether array items are created as separate\n      //     nodes when passed as an object value: true or false\n      // `options.noDoubleEncoding` whether existing html entities are encoded:\n      //     true or false\n      // `options.stringify` a set of functions to use for converting values to\n      //     strings\n      // `options.writer` the default XML writer to use for converting nodes to\n      //     string. If the default writer is not set, the built-in XMLStringWriter\n      //     will be used instead.\n      constructor(options) {\n        super(null);\n        this.name = \"#document\";\n        this.type = NodeType.Document;\n        this.documentURI = null;\n        this.domConfig = new XMLDOMConfiguration();\n        options || (options = {});\n        if (!options.writer) {\n          options.writer = new XMLStringWriter();\n        }\n        this.options = options;\n        this.stringify = new XMLStringifier(options);\n      }\n\n      // Ends the document and passes it to the given XML writer\n\n      // `writer` is either an XML writer or a plain object to pass to the\n      // constructor of the default XML writer. The default writer is assigned when\n      // creating the XML document. Following flags are recognized by the\n      // built-in XMLStringWriter:\n      //   `writer.pretty` pretty prints the result\n      //   `writer.indent` indentation for pretty print\n      //   `writer.offset` how many indentations to add to every line for pretty print\n      //   `writer.newline` newline sequence for pretty print\n      end(writer) {\n        var writerOptions;\n        writerOptions = {};\n        if (!writer) {\n          writer = this.options.writer;\n        } else if (isPlainObject(writer)) {\n          writerOptions = writer;\n          writer = this.options.writer;\n        }\n        return writer.document(this, writer.filterOptions(writerOptions));\n      }\n\n      // Converts the XML document to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.document(this, this.options.writer.filterOptions(options));\n      }\n\n      // DOM level 1 functions to be implemented later\n      createElement(tagName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createDocumentFragment() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createTextNode(data) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createComment(data) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createCDATASection(data) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createProcessingInstruction(target, data) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createAttribute(name) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createEntityReference(name) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByTagName(tagname) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM level 2 functions to be implemented later\n      importNode(importedNode, deep) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createElementNS(namespaceURI, qualifiedName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createAttributeNS(namespaceURI, qualifiedName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByTagNameNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementById(elementId) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM level 3 functions to be implemented later\n      adoptNode(source) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      normalizeDocument() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      renameNode(node, namespaceURI, qualifiedName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM level 4 functions to be implemented later\n      getElementsByClassName(classNames) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createEvent(eventInterface) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createRange() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createNodeIterator(root, whatToShow, filter) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createTreeWalker(root, whatToShow, filter) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLDocument.prototype, 'implementation', {\n      value: new XMLDOMImplementation()\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'doctype', {\n      get: function() {\n        var child, i, len, ref;\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.DocType) {\n            return child;\n          }\n        }\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'documentElement', {\n      get: function() {\n        return this.rootObject || null;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {\n      get: function() {\n        return false;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].encoding;\n        } else {\n          return null;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].standalone === 'yes';\n        } else {\n          return false;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].version;\n        } else {\n          return \"1.0\";\n        }\n      }\n    });\n\n    // DOM level 4\n    Object.defineProperty(XMLDocument.prototype, 'URL', {\n      get: function() {\n        return this.documentURI;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'origin', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'compatMode', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'characterSet', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'contentType', {\n      get: function() {\n        return null;\n      }\n    });\n\n    return XMLDocument;\n\n  }).call(this);\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject,\n    hasProp = {}.hasOwnProperty;\n\n  ({isObject, isFunction, isPlainObject, getValue} = require('./Utility'));\n\n  NodeType = require('./NodeType');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  WriterState = require('./WriterState');\n\n  // Represents an XML builder\n  module.exports = XMLDocumentCB = class XMLDocumentCB {\n    // Initializes a new instance of `XMLDocumentCB`\n\n    // `options.keepNullNodes` whether nodes with null values will be kept\n    //     or ignored: true or false\n    // `options.keepNullAttributes` whether attributes with null values will be\n    //     kept or ignored: true or false\n    // `options.ignoreDecorators` whether decorator strings will be ignored when\n    //     converting JS objects: true or false\n    // `options.separateArrayItems` whether array items are created as separate\n    //     nodes when passed as an object value: true or false\n    // `options.noDoubleEncoding` whether existing html entities are encoded:\n    //     true or false\n    // `options.stringify` a set of functions to use for converting values to\n    //     strings\n    // `options.writer` the default XML writer to use for converting nodes to\n    //     string. If the default writer is not set, the built-in XMLStringWriter\n    //     will be used instead.\n\n    // `onData` the function to be called when a new chunk of XML is output. The\n    //          string containing the XML chunk is passed to `onData` as its first\n    //          argument, and the current indentation level as its second argument.\n    // `onEnd`  the function to be called when the XML document is completed with\n    //          `end`. `onEnd` does not receive any arguments.\n    constructor(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    // Creates a child element node from the given XMLNode\n\n    // `node` the child node\n    createChildNode(node) {\n      var att, attName, attributes, child, i, len, ref, ref1;\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n        case NodeType.Element:\n          attributes = {};\n          ref = node.attribs;\n          for (attName in ref) {\n            if (!hasProp.call(ref, attName)) continue;\n            att = ref[attName];\n            attributes[attName] = att.value;\n          }\n          this.node(node.name, attributes);\n          break;\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n      ref1 = node.children;\n      // write child nodes recursively\n      for (i = 0, len = ref1.length; i < len; i++) {\n        child = ref1[i];\n        this.createChildNode(child);\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n      return this;\n    }\n\n    // Creates a dummy node\n\n    dummy() {\n      // no-op, just return this\n      return this;\n    }\n\n    // Creates a node\n\n    // `name` name of the node\n    // `attributes` an object containing name/value pairs of attributes\n    // `text` element text\n    node(name, attributes, text) {\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n      this.openCurrent();\n      name = getValue(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      // swap argument order: text <-> attributes\n      if (!isObject(attributes)) {\n        [text, attributes] = [attributes, text];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    }\n\n    // Creates a child element node or an element type declaration when called\n    // inside the DTD\n\n    // `name` name of the node\n    // `attributes` an object containing name/value pairs of attributes\n    // `text` element text\n    element(name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref, root;\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement(...arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref = root.children;\n          for (i = 0, len = ref.length; i < len; i++) {\n            child = ref[i];\n            this.createChildNode(child);\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n      return this;\n    }\n\n    // Adds or modifies an attribute\n\n    // `name` attribute name\n    // `value` attribute value\n    attribute(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) { // expand if object\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    }\n\n    // Creates a text node\n\n    // `value` element text\n    text(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates a CDATA node\n\n    // `value` element text without CDATA delimiters\n    cdata(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates a comment node\n\n    // `value` comment text\n    comment(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Adds unescaped raw text\n\n    // `value` text\n    raw(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Adds a processing instruction\n\n    // `target` instruction target\n    // `value` instruction value\n    instruction(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) { // expand if array\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) { // expand if object\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n      return this;\n    }\n\n    // Creates the xml declaration\n\n    // `version` A version number string, e.g. 1.0\n    // `encoding` Encoding declaration, e.g. UTF-8\n    // `standalone` standalone document declaration: true or false\n    declaration(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates the document type declaration\n\n    // `root`  the name of the root node\n    // `pubID` the public identifier of the external subset\n    // `sysID` the system identifier of the external subset\n    doctype(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    }\n\n    // Creates an element type declaration\n\n    // `name` element name\n    // `value` element content (defaults to #PCDATA)\n    dtdElement(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates an attribute declaration\n\n    // `elementName` the name of the element containing this attribute\n    // `attributeName` attribute name\n    // `attributeType` type of the attribute (defaults to CDATA)\n    // `defaultValueType` default value type (either #REQUIRED, #IMPLIED, #FIXED or\n    //                    #DEFAULT) (defaults to #IMPLIED)\n    // `defaultValue` default value of the attribute\n    //                (only used for #FIXED or #DEFAULT)\n    attList(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates a general entity declaration\n\n    // `name` the name of the entity\n    // `value` internal entity value or an object with external entity details\n    // `value.pubID` public identifier\n    // `value.sysID` system identifier\n    // `value.nData` notation declaration\n    entity(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates a parameter entity declaration\n\n    // `name` the name of the entity\n    // `value` internal entity value or an object with external entity details\n    // `value.pubID` public identifier\n    // `value.sysID` system identifier\n    pEntity(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates a NOTATION declaration\n\n    // `name` the name of the notation\n    // `value` an object with external entity details\n    // `value.pubID` public identifier\n    // `value.sysID` system identifier\n    notation(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Gets the parent node\n    up() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    }\n\n    // Ends the document\n    end() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    }\n\n    // Opens the current parent node\n    openCurrent() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    }\n\n    // Writes the opening tag of the current node or the entire node if it has\n    // no child nodes\n    openNode(node) {\n      var att, chunk, name, ref;\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n        chunk = '';\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref = node.attribs;\n          for (name in ref) {\n            if (!hasProp.call(ref, name)) continue;\n            att = ref[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag; // if node.type is NodeType.DocType\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n          \n          // external identifier\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n          \n          // internal subset\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    }\n\n    // Writes the closing tag of the current node\n    closeNode(node) {\n      var chunk;\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel); // if node.type is NodeType.DocType\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    }\n\n    // Called when a new chunk of XML is output\n\n    // `chunk` a string containing the XML chunk\n    // `level` current indentation level\n    onData(chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    }\n\n    // Called when the XML document is completed\n    onEnd() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    }\n\n    // Returns debug string\n    debugInfo(name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    }\n\n    // Node aliases\n    ele() {\n      return this.element(...arguments);\n    }\n\n    nod(name, attributes, text) {\n      return this.node(name, attributes, text);\n    }\n\n    txt(value) {\n      return this.text(value);\n    }\n\n    dat(value) {\n      return this.cdata(value);\n    }\n\n    com(value) {\n      return this.comment(value);\n    }\n\n    ins(target, value) {\n      return this.instruction(target, value);\n    }\n\n    dec(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    }\n\n    dtd(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    }\n\n    e(name, attributes, text) {\n      return this.element(name, attributes, text);\n    }\n\n    n(name, attributes, text) {\n      return this.node(name, attributes, text);\n    }\n\n    t(value) {\n      return this.text(value);\n    }\n\n    d(value) {\n      return this.cdata(value);\n    }\n\n    c(value) {\n      return this.comment(value);\n    }\n\n    r(value) {\n      return this.raw(value);\n    }\n\n    i(target, value) {\n      return this.instruction(target, value);\n    }\n\n    // Attribute aliases\n    att() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList(...arguments);\n      } else {\n        return this.attribute(...arguments);\n      }\n    }\n\n    a() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList(...arguments);\n      } else {\n        return this.attribute(...arguments);\n      }\n    }\n\n    // DTD aliases\n    // att() and ele() are defined above\n    ent(name, value) {\n      return this.entity(name, value);\n    }\n\n    pent(name, value) {\n      return this.pEntity(name, value);\n    }\n\n    not(name, value) {\n      return this.notation(name, value);\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  WriterState = require('./WriterState');\n\n  // Prints XML nodes to a stream\n  module.exports = XMLStreamWriter = class XMLStreamWriter extends XMLWriterBase {\n    // Initializes a new instance of `XMLStreamWriter`\n\n    // `stream` output stream\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation string\n    // `options.newline` newline sequence\n    // `options.offset` a fixed number of indentations to add to every line\n    // `options.allowEmpty` do not self close empty element tags\n    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF\n    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements\n    constructor(stream, options) {\n      super(options);\n      this.stream = stream;\n    }\n\n    endline(node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return super.endline(node, options, level);\n      }\n    }\n\n    document(doc, options) {\n      var child, i, j, k, len1, len2, ref, ref1, results;\n      ref = doc.children;\n      // set a flag so that we don't insert a newline after the last root level node \n      for (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len2 = ref1.length; k < len2; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    }\n\n    cdata(node, options, level) {\n      return this.stream.write(super.cdata(node, options, level));\n    }\n\n    comment(node, options, level) {\n      return this.stream.write(super.comment(node, options, level));\n    }\n\n    declaration(node, options, level) {\n      return this.stream.write(super.declaration(node, options, level));\n    }\n\n    docType(node, options, level) {\n      var child, j, len1, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      // external identifier\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      // internal subset\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len1 = ref.length; j < len1; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      // close tag\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    }\n\n    element(node, options, level) {\n      var att, attLen, child, childNodeCount, firstChildNode, j, len, len1, name, prettySuppressed, r, ratt, ref, ref1, ref2, rline;\n      level || (level = 0);\n      // open tag\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<' + node.name;\n      // attributes\n      if (options.pretty && options.width > 0) {\n        len = r.length;\n        ref = node.attribs;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          ratt = this.attribute(att, options, level);\n          attLen = ratt.length;\n          if (len + attLen > options.width) {\n            rline = this.indent(node, options, level + 1) + ratt;\n            r += this.endline(node, options, level) + rline;\n            len = rline.length;\n          } else {\n            rline = ' ' + ratt;\n            r += rline;\n            len += rline.length;\n          }\n        }\n      } else {\n        ref1 = node.attribs;\n        for (name in ref1) {\n          if (!hasProp.call(ref1, name)) continue;\n          att = ref1[name];\n          r += this.attribute(att, options, level);\n        }\n      }\n      this.stream.write(r);\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw || e.type === NodeType.CData) && e.value === '';\n      })) {\n        // empty element\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw || firstChildNode.type === NodeType.CData) && (firstChildNode.value != null)) {\n        // do not indent text-only nodes\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        // inner tags\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        // close tag\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    }\n\n    processingInstruction(node, options, level) {\n      return this.stream.write(super.processingInstruction(node, options, level));\n    }\n\n    raw(node, options, level) {\n      return this.stream.write(super.raw(node, options, level));\n    }\n\n    text(node, options, level) {\n      return this.stream.write(super.text(node, options, level));\n    }\n\n    dtdAttList(node, options, level) {\n      return this.stream.write(super.dtdAttList(node, options, level));\n    }\n\n    dtdElement(node, options, level) {\n      return this.stream.write(super.dtdElement(node, options, level));\n    }\n\n    dtdEntity(node, options, level) {\n      return this.stream.write(super.dtdEntity(node, options, level));\n    }\n\n    dtdNotation(node, options, level) {\n      return this.stream.write(super.dtdNotation(node, options, level));\n    }\n\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction;\n\n  ({assign, isFunction} = require('./Utility'));\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  NodeType = require('./NodeType');\n\n  WriterState = require('./WriterState');\n\n  // Creates a new document and returns the root node for\n  // chain-building the document tree\n\n  // `name` name of the root element\n\n  // `xmldec.version` A version number string, e.g. 1.0\n  // `xmldec.encoding` Encoding declaration, e.g. UTF-8\n  // `xmldec.standalone` standalone document declaration: true or false\n\n  // `doctype.pubID` public identifier of the external subset\n  // `doctype.sysID` system identifier of the external subset\n\n  // `options.headless` whether XML declaration and doctype will be included:\n  //     true or false\n  // `options.keepNullNodes` whether nodes with null values will be kept\n  //     or ignored: true or false\n  // `options.keepNullAttributes` whether attributes with null values will be\n  //     kept or ignored: true or false\n  // `options.ignoreDecorators` whether decorator strings will be ignored when\n  //     converting JS objects: true or false\n  // `options.separateArrayItems` whether array items are created as separate\n  //     nodes when passed as an object value: true or false\n  // `options.noDoubleEncoding` whether existing html entities are encoded:\n  //     true or false\n  // `options.stringify` a set of functions to use for converting values to\n  //     strings\n  // `options.writer` the default XML writer to use for converting nodes to\n  //     string. If the default writer is not set, the built-in XMLStringWriter\n  //     will be used instead.\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name.\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    // create the document node\n    doc = new XMLDocument(options);\n    // add the root node\n    root = doc.element(name);\n    // prolog\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.dtd(options);\n      }\n    }\n    return root;\n  };\n\n  // Creates a new document and returns the document node for\n  // chain-building the document tree\n\n  // `options.keepNullNodes` whether nodes with null values will be kept\n  //     or ignored: true or false\n  // `options.keepNullAttributes` whether attributes with null values will be\n  //     kept or ignored: true or false\n  // `options.ignoreDecorators` whether decorator strings will be ignored when\n  //     converting JS objects: true or false\n  // `options.separateArrayItems` whether array items are created as separate\n  //     nodes when passed as an object value: true or false\n  // `options.noDoubleEncoding` whether existing html entities are encoded:\n  //     true or false\n  // `options.stringify` a set of functions to use for converting values to\n  //     strings\n  // `options.writer` the default XML writer to use for converting nodes to\n  //     string. If the default writer is not set, the built-in XMLStringWriter\n  //     will be used instead.\n\n  // `onData` the function to be called when a new chunk of XML is output. The\n  //          string containing the XML chunk is passed to `onData` as its single\n  //          argument.\n  // `onEnd`  the function to be called when the XML document is completed with\n  //          `end`. `onEnd` does not receive any arguments.\n  module.exports.begin = function(options, onData, onEnd) {\n    if (isFunction(options)) {\n      [onData, onEnd] = [options, onData];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n  module.exports.implementation = new XMLDOMImplementation();\n\n  module.exports.nodeType = NodeType;\n\n  module.exports.writerState = WriterState;\n\n}).call(this);\n", "/**\n * Module dependencies.\n */\n\nimport { DOMParser } from '@xmldom/xmldom';\n\n/**\n * Module exports.\n */\n\nexport default parse;\n\nvar TEXT_NODE = 3;\nvar CDATA_NODE = 4;\nvar COMMENT_NODE = 8;\n\n\n/**\n * We ignore raw text (usually whitespace), <!-- xml comments -->,\n * and raw CDATA nodes.\n *\n * @param {Element} node\n * @returns {Boolean}\n * @api private\n */\n\nfunction shouldIgnoreNode (node) {\n  return node.nodeType === TEXT_NODE\n    || node.nodeType === COMMENT_NODE\n    || node.nodeType === CDATA_NODE;\n}\n\n/**\n * Check if the node is empty. Some plist file has such node:\n * <key />\n * this node shoud be ignored.\n *\n * @see https://github.com/TooTallNate/plist.js/issues/66\n * @param {Element} node\n * @returns {Boolean}\n * @api private\n */\nfunction isEmptyNode(node){\n  if(!node.childNodes || node.childNodes.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction invariant(test, message) {\n  if (!test) {\n    throw new Error(message);\n  }\n}\n\n/**\n * Parses a Plist XML string. Returns an Object.\n *\n * @param {String} xml - the XML String to decode\n * @returns {Mixed} the decoded value from the Plist XML\n * @api public\n */\n\nfunction parse (xml) {\n  var doc = new DOMParser().parseFromString(xml);\n  invariant(\n    doc.documentElement.nodeName === 'plist',\n    'malformed document. First element should be <plist>'\n  );\n  var plist = parsePlistXML(doc.documentElement);\n\n  // the root <plist> node gets interpreted as an Array,\n  // so pull out the inner data first\n  if (plist.length == 1) plist = plist[0];\n\n  return plist;\n}\n\n/**\n * Convert an XML based plist document into a JSON representation.\n *\n * @param {Object} xml_node - current XML node in the plist\n * @returns {Mixed} built up JSON object\n * @api private\n */\n\nfunction parsePlistXML (node) {\n  var i, new_obj, key, val, new_arr, res, counter, type;\n\n  if (!node)\n    return null;\n\n  if (node.nodeName === 'plist') {\n    new_arr = [];\n    if (isEmptyNode(node)) {\n      return new_arr;\n    }\n    for (i=0; i < node.childNodes.length; i++) {\n      if (!shouldIgnoreNode(node.childNodes[i])) {\n        new_arr.push( parsePlistXML(node.childNodes[i]));\n      }\n    }\n    return new_arr;\n  } else if (node.nodeName === 'dict') {\n    new_obj = {};\n    key = null;\n    counter = 0;\n    if (isEmptyNode(node)) {\n      return new_obj;\n    }\n    for (i=0; i < node.childNodes.length; i++) {\n      if (shouldIgnoreNode(node.childNodes[i])) continue;\n      if (counter % 2 === 0) {\n        invariant(\n          node.childNodes[i].nodeName === 'key',\n          'Missing key while parsing <dict/>.'\n        );\n        key = parsePlistXML(node.childNodes[i]);\n      } else {\n        invariant(\n          node.childNodes[i].nodeName !== 'key',\n          'Unexpected key \"'\n            + parsePlistXML(node.childNodes[i])\n            + '\" while parsing <dict/>.'\n        );\n        new_obj[key] = parsePlistXML(node.childNodes[i]);\n      }\n      counter += 1;\n    }\n    if (counter % 2 === 1) {\n      new_obj[key] = '';\n    }\n    \n    return new_obj;\n\n  } else if (node.nodeName === 'array') {\n    new_arr = [];\n    if (isEmptyNode(node)) {\n      return new_arr;\n    }\n    for (i=0; i < node.childNodes.length; i++) {\n      if (!shouldIgnoreNode(node.childNodes[i])) {\n        res = parsePlistXML(node.childNodes[i]);\n        if (null != res) new_arr.push(res);\n      }\n    }\n    return new_arr;\n\n  } else if (node.nodeName === '#text') {\n    // TODO: what should we do with text types? (CDATA sections)\n\n  } else if (node.nodeName === 'key') {\n    if (isEmptyNode(node)) {\n      return '';\n    }\n\n    invariant(\n      node.childNodes[0].nodeValue !== '__proto__',\n      '__proto__ keys can lead to prototype pollution. More details on CVE-2022-22912'\n    );\n\n    return node.childNodes[0].nodeValue;\n  } else if (node.nodeName === 'string') {\n    res = '';\n    if (isEmptyNode(node)) {\n      return res;\n    }\n    for (i=0; i < node.childNodes.length; i++) {\n      var type = node.childNodes[i].nodeType;\n      if (type === TEXT_NODE || type === CDATA_NODE) {\n        res += node.childNodes[i].nodeValue;\n      }\n    }\n    return res;\n\n  } else if (node.nodeName === 'integer') {\n    invariant(\n      !isEmptyNode(node),\n      'Cannot parse \"\" as integer.'\n    );\n    return parseInt(node.childNodes[0].nodeValue, 10);\n\n  } else if (node.nodeName === 'real') {\n    invariant(\n      !isEmptyNode(node),\n      'Cannot parse \"\" as real.'\n    );\n    res = '';\n    for (i=0; i < node.childNodes.length; i++) {\n      if (node.childNodes[i].nodeType === TEXT_NODE) {\n        res += node.childNodes[i].nodeValue;\n      }\n    }\n    return parseFloat(res);\n\n  } else if (node.nodeName === 'data') {\n    res = '';\n    if (isEmptyNode(node)) {\n      return Buffer.from(res, 'base64');\n    }\n    for (i=0; i < node.childNodes.length; i++) {\n      if (node.childNodes[i].nodeType === TEXT_NODE) {\n        res += node.childNodes[i].nodeValue.replace(/\\s+/g, '');\n      }\n    }\n    return Buffer.from(res, 'base64');\n\n  } else if (node.nodeName === 'date') {\n    invariant(\n      !isEmptyNode(node),\n      'Cannot parse \"\" as Date.'\n    )\n    return new Date(node.childNodes[0].nodeValue);\n\n  } else if (node.nodeName === 'null') {\n    return null;\n\n  } else if (node.nodeName === 'true') {\n    return true;\n\n  } else if (node.nodeName === 'false') {\n    return false;\n  } else {\n    throw new Error('Invalid PLIST tag ' + node.nodeName);\n  }\n}\n", "/**\n * Module dependencies.\n */\n\nimport * as base64 from 'base64-js';\nimport xmlbuilder from 'xmlbuilder';\n\n/**\n * Module exports.\n */\n\nexport default build;\n\n/**\n * Accepts a `Date` instance and returns an ISO date string.\n *\n * @param {Date} d - Date instance to serialize\n * @returns {String} ISO date string representation of `d`\n * @api private\n */\n\nfunction ISODateString(d){\n  function pad(n){\n    return n < 10 ? '0' + n : n;\n  }\n  return d.getUTCFullYear()+'-'\n    + pad(d.getUTCMonth()+1)+'-'\n    + pad(d.getUTCDate())+'T'\n    + pad(d.getUTCHours())+':'\n    + pad(d.getUTCMinutes())+':'\n    + pad(d.getUTCSeconds())+'Z';\n}\n\n/**\n * Returns the internal \"type\" of `obj` via the\n * `Object.prototype.toString()` trick.\n *\n * @param {Mixed} obj - any value\n * @returns {String} the internal \"type\" name\n * @api private\n */\n\nvar toString = Object.prototype.toString;\nfunction type (obj) {\n  var m = toString.call(obj).match(/\\[object (.*)\\]/);\n  return m ? m[1] : m;\n}\n\n/**\n * Generate an XML plist string from the input object `obj`.\n *\n * @param {Object} obj - the object to convert\n * @param {Object} [opts] - optional options object\n * @returns {String} converted plist XML string\n * @api public\n */\n\nfunction build (obj, opts) {\n  var XMLHDR = {\n    version: '1.0',\n    encoding: 'UTF-8'\n  };\n\n  var XMLDTD = {\n    pubid: '-//Apple//DTD PLIST 1.0//EN',\n    sysid: 'http://www.apple.com/DTDs/PropertyList-1.0.dtd'\n  };\n\n  var doc = xmlbuilder.create('plist');\n\n  doc.dec(XMLHDR.version, XMLHDR.encoding, XMLHDR.standalone);\n  doc.dtd(XMLDTD.pubid, XMLDTD.sysid);\n  doc.att('version', '1.0');\n\n  walk_obj(obj, doc);\n\n  if (!opts) opts = {};\n  // default `pretty` to `true`\n  opts.pretty = opts.pretty !== false;\n  return doc.end(opts);\n}\n\n/**\n * depth first, recursive traversal of a javascript object. when complete,\n * next_child contains a reference to the build XML object.\n *\n * @api private\n */\n\nfunction walk_obj(next, next_child) {\n  var tag_type, i, prop;\n  var name = type(next);\n\n  if ('Undefined' == name) {\n    return;\n  } else if (Array.isArray(next)) {\n    next_child = next_child.ele('array');\n    for (i = 0; i < next.length; i++) {\n      walk_obj(next[i], next_child);\n    }\n\n  } else if (Buffer.isBuffer(next)) {\n    next_child.ele('data').raw(next.toString('base64'));\n\n  } else if ('Object' == name) {\n    next_child = next_child.ele('dict');\n    for (prop in next) {\n      if (next.hasOwnProperty(prop)) {\n        next_child.ele('key').txt(prop);\n        walk_obj(next[prop], next_child);\n      }\n    }\n\n  } else if ('Number' == name) {\n    // detect if this is an integer or real\n    // TODO: add an ability to force one way or another via a \"cast\"\n    tag_type = (next % 1 === 0) ? 'integer' : 'real';\n    next_child.ele(tag_type).txt(next.toString());\n\n  } else if ('BigInt' == name) {\n    next_child.ele('integer').txt(next);\n\n  } else if ('Date' == name) {\n    next_child.ele('date').txt(ISODateString(new Date(next)));\n\n  } else if ('Boolean' == name) {\n    next_child.ele(next ? 'true' : 'false');\n\n  } else if ('String' == name) {\n    next_child.ele('string').txt(next);\n\n  } else if ('ArrayBuffer' == name) {\n    next_child.ele('data').raw(base64.fromByteArray(next));\n\n  } else if (next && next.buffer && 'ArrayBuffer' == type(next.buffer)) {\n    // a typed array\n    next_child.ele('data').raw(base64.fromByteArray(new Uint8Array(next.buffer), next_child));\n\n  } else if ('Null' === name) {\n    next_child.ele('null').txt('');\n\n  }\n}\n"],
  "mappings": "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",
  "names": ["t", "TEXT_NODE", "COMMENT_NODE", "hasDoctypeChildThatIsNotChild", "node", "getTextContent", "parse", "a", "end", "value", "DOMParser", "sax", "build", "fromByteArray", "len", "i", "len2", "XMLDOMStringList", "XMLDOMConfiguration", "XMLAttribute", "XMLNamedNodeMap", "XMLElement", "XMLCharacterData", "XMLDTDEntity", "XMLDTDNotation", "XMLDocType", "XMLText", "XMLNodeList", "XMLNode", "XMLStringifier", "XMLDocument", "require_lib", "type", "xmlbuilder"]
}
